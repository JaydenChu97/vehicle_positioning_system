#include <iocc2530.h>

#ifndef INIT_H
#define INIT_H


//定义控制灯的端口
#define LED1 P1_0
#define LED2 P1_1
#define LED3 P0_4

/****************************************************************
初始化串口0函数					
****************************************************************/
void initUART0(void)
{
    CLKCONCMD &= ~0x40;                         //设置系统时钟源为32MHZ晶振
    while(CLKCONSTA & 0x40);                    //等待晶振稳定
    CLKCONCMD &= ~0x47;                         //设置系统主时钟频率为32MHZ
   
    PERCFG = 0x00;				//UART0备用位置1 P0口 2:RX 3:TX
    P0SEL = 0x0C;				//P0用作串口
    P2DIR &= ~0XC0;                             //P0优先作为UART0, 在此设置下UART1会
                                                //优先用4,5引脚    
    
    U0CSR |= 0x80;				//串口设置为UART方式
    U0GCR |= 8;				
    U0BAUD |= 59;				//波特率设为9600
    
    UTX0IF = 0;                                 //UART0 TX中断标志初始置位0
                                                //由于不需要调用中断函数, 不需要开启对应
                                                //的中断, 但是终端标志是始终都会产生的
}

/****************************************************************
初始化串口1函数					
****************************************************************/
void initUART1(void)
{
   
    PERCFG = 0x00;				//UART1备用位置1 P0口 4:TX 5:RX 
    P0SEL |= 0x30;				//P0用作串口 
    
    U1CSR |= 0x80;				//串口设置为UART方式
    U1GCR |= 8;				
    U1BAUD |= 59;				//波特率设为9600 
    
    U1CSR |= 0X40;				//允许接收

    URX1IF = 0;                                 //UART1 RX中断标志初始置位0
    IEN0 |= 0x88;				//开总中断，U1接收中断  
}

/****************************************************************
初始化LED函数					
****************************************************************/
void initLed(void)
{
    P1DIR = 0x03; 				//P1控制LED
	LED1 = 1;
	LED2 = 1;				//关LED
    LED3 = 1;
        
}

/****************************************************************
总体初始化控制函数					
****************************************************************/
void init(void)
{
    initLed();
	initUART0();
    initUART1();
}

#endif